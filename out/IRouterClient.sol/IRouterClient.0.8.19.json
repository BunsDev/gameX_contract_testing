{"abi":[{"type":"function","name":"ccipSend","inputs":[{"name":"destinationChainSelector","type":"uint64","internalType":"uint64"},{"name":"message","type":"tuple","internalType":"struct Client.EVM2AnyMessage","components":[{"name":"receiver","type":"bytes","internalType":"bytes"},{"name":"data","type":"bytes","internalType":"bytes"},{"name":"tokenAmounts","type":"tuple[]","internalType":"struct Client.EVMTokenAmount[]","components":[{"name":"token","type":"address","internalType":"address"},{"name":"amount","type":"uint256","internalType":"uint256"}]},{"name":"feeToken","type":"address","internalType":"address"},{"name":"extraArgs","type":"bytes","internalType":"bytes"}]}],"outputs":[{"name":"","type":"bytes32","internalType":"bytes32"}],"stateMutability":"payable"},{"type":"function","name":"getFee","inputs":[{"name":"destinationChainSelector","type":"uint64","internalType":"uint64"},{"name":"message","type":"tuple","internalType":"struct Client.EVM2AnyMessage","components":[{"name":"receiver","type":"bytes","internalType":"bytes"},{"name":"data","type":"bytes","internalType":"bytes"},{"name":"tokenAmounts","type":"tuple[]","internalType":"struct Client.EVMTokenAmount[]","components":[{"name":"token","type":"address","internalType":"address"},{"name":"amount","type":"uint256","internalType":"uint256"}]},{"name":"feeToken","type":"address","internalType":"address"},{"name":"extraArgs","type":"bytes","internalType":"bytes"}]}],"outputs":[{"name":"fee","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"getSupportedTokens","inputs":[{"name":"destChainSelector","type":"uint64","internalType":"uint64"}],"outputs":[{"name":"tokens","type":"address[]","internalType":"address[]"}],"stateMutability":"view"},{"type":"function","name":"isChainSupported","inputs":[{"name":"destChainSelector","type":"uint64","internalType":"uint64"}],"outputs":[{"name":"supported","type":"bool","internalType":"bool"}],"stateMutability":"view"},{"type":"error","name":"InsufficientFeeTokenAmount","inputs":[]},{"type":"error","name":"InvalidMsgValue","inputs":[]},{"type":"error","name":"UnsupportedDestinationChain","inputs":[{"name":"destChainSelector","type":"uint64","internalType":"uint64"}]}],"bytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"deployedBytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"methodIdentifiers":{"ccipSend(uint64,(bytes,bytes,(address,uint256)[],address,bytes))":"96f4e9f9","getFee(uint64,(bytes,bytes,(address,uint256)[],address,bytes))":"20487ded","getSupportedTokens(uint64)":"fbca3b74","isChainSupported(uint64)":"a48a9058"},"rawMetadata":"{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InsufficientFeeTokenAmount\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidMsgValue\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"destChainSelector\",\"type\":\"uint64\"}],\"name\":\"UnsupportedDestinationChain\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"destinationChainSelector\",\"type\":\"uint64\"},{\"components\":[{\"internalType\":\"bytes\",\"name\":\"receiver\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"internalType\":\"struct Client.EVMTokenAmount[]\",\"name\":\"tokenAmounts\",\"type\":\"tuple[]\"},{\"internalType\":\"address\",\"name\":\"feeToken\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"extraArgs\",\"type\":\"bytes\"}],\"internalType\":\"struct Client.EVM2AnyMessage\",\"name\":\"message\",\"type\":\"tuple\"}],\"name\":\"ccipSend\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"destinationChainSelector\",\"type\":\"uint64\"},{\"components\":[{\"internalType\":\"bytes\",\"name\":\"receiver\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"internalType\":\"struct Client.EVMTokenAmount[]\",\"name\":\"tokenAmounts\",\"type\":\"tuple[]\"},{\"internalType\":\"address\",\"name\":\"feeToken\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"extraArgs\",\"type\":\"bytes\"}],\"internalType\":\"struct Client.EVM2AnyMessage\",\"name\":\"message\",\"type\":\"tuple\"}],\"name\":\"getFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"fee\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"destChainSelector\",\"type\":\"uint64\"}],\"name\":\"getSupportedTokens\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"tokens\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"destChainSelector\",\"type\":\"uint64\"}],\"name\":\"isChainSupported\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"supported\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"ccipSend(uint64,(bytes,bytes,(address,uint256)[],address,bytes))\":{\"details\":\"Note if msg.value is larger than the required fee (from getFee) we accept the overpayment with no refund.Reverts with appropriate reason upon invalid message.\",\"params\":{\"destinationChainSelector\":\"The destination chain ID\",\"message\":\"The cross-chain CCIP message including data and/or tokens\"},\"returns\":{\"_0\":\"messageId The message ID\"}},\"getFee(uint64,(bytes,bytes,(address,uint256)[],address,bytes))\":{\"details\":\"Reverts with appropriate reason upon invalid message.\",\"params\":{\"destinationChainSelector\":\"The destination chainSelector\",\"message\":\"The cross-chain CCIP message including data and/or tokens\"},\"returns\":{\"fee\":\"returns execution fee for the message delivery to destination chain, denominated in the feeToken specified in the message.\"}},\"getSupportedTokens(uint64)\":{\"params\":{\"destChainSelector\":\"No longer used.\"},\"returns\":{\"tokens\":\"The addresses of the tokens that are supported.\"}},\"isChainSupported(uint64)\":{\"params\":{\"destChainSelector\":\"The chain to check.\"},\"returns\":{\"supported\":\"is true if it is supported, false if not.\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"ccipSend(uint64,(bytes,bytes,(address,uint256)[],address,bytes))\":{\"notice\":\"Request a message to be sent to the destination chain\"},\"getSupportedTokens(uint64)\":{\"notice\":\"Gets a list of all tokens that have been configured through permissioned methods for the local chain. Do note that this list may not be exhaustive as some tokens may be supported permissionlessly. The list does not take the destChainSelector into account.\"},\"isChainSupported(uint64)\":{\"notice\":\"Checks if the given chain ID is supported for sending/receiving.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"lib/ccip/contracts/src/v0.8/ccip/interfaces/IRouterClient.sol\":\"IRouterClient\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@chainlink/contracts-ccip/=lib/ccip/contracts/\",\":@chainlink/local/=lib/chainlink-local/\",\":@chainlink/local/src/=lib/chainlink-local/src/\",\":@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/\",\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":ccip/=lib/ccip/contracts/\",\":chainlink-local/=lib/chainlink-local/src/\",\":ds-test/=lib/chainlink-local/lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\"],\"viaIR\":true},\"sources\":{\"lib/ccip/contracts/src/v0.8/ccip/interfaces/IRouterClient.sol\":{\"keccak256\":\"0x379d680977a37d1e62c6e20c4259b8c69d8a7cd67f32abf99ffda640450b3f95\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://68ef22693821814407348128b7ff255727131c720065be72e71a38f9715ee5fe\",\"dweb:/ipfs/Qmdsd7GGhRGQaoh3nS1VYFMjkCfbRpSps5nGQMNK4XXdwr\"]},\"lib/ccip/contracts/src/v0.8/ccip/libraries/Client.sol\":{\"keccak256\":\"0xa1ce70adec733c80b230084b425a50caa852a99f17a7e43e38a96a975f11ce88\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://08db3aa57ceae13832c1bf323aa29afa2620fd5b5205ff0d56152bf323c56256\",\"dweb:/ipfs/QmUG2FSVP8xXVkdgFwNhc4YFDU7FNCaf1kKShiTaaHUddE\"]}},\"version\":1}","metadata":{"compiler":{"version":"0.8.19+commit.7dd6d404"},"language":"Solidity","output":{"abi":[{"inputs":[],"type":"error","name":"InsufficientFeeTokenAmount"},{"inputs":[],"type":"error","name":"InvalidMsgValue"},{"inputs":[{"internalType":"uint64","name":"destChainSelector","type":"uint64"}],"type":"error","name":"UnsupportedDestinationChain"},{"inputs":[{"internalType":"uint64","name":"destinationChainSelector","type":"uint64"},{"internalType":"struct Client.EVM2AnyMessage","name":"message","type":"tuple","components":[{"internalType":"bytes","name":"receiver","type":"bytes"},{"internalType":"bytes","name":"data","type":"bytes"},{"internalType":"struct Client.EVMTokenAmount[]","name":"tokenAmounts","type":"tuple[]","components":[{"internalType":"address","name":"token","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}]},{"internalType":"address","name":"feeToken","type":"address"},{"internalType":"bytes","name":"extraArgs","type":"bytes"}]}],"stateMutability":"payable","type":"function","name":"ccipSend","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}]},{"inputs":[{"internalType":"uint64","name":"destinationChainSelector","type":"uint64"},{"internalType":"struct Client.EVM2AnyMessage","name":"message","type":"tuple","components":[{"internalType":"bytes","name":"receiver","type":"bytes"},{"internalType":"bytes","name":"data","type":"bytes"},{"internalType":"struct Client.EVMTokenAmount[]","name":"tokenAmounts","type":"tuple[]","components":[{"internalType":"address","name":"token","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}]},{"internalType":"address","name":"feeToken","type":"address"},{"internalType":"bytes","name":"extraArgs","type":"bytes"}]}],"stateMutability":"view","type":"function","name":"getFee","outputs":[{"internalType":"uint256","name":"fee","type":"uint256"}]},{"inputs":[{"internalType":"uint64","name":"destChainSelector","type":"uint64"}],"stateMutability":"view","type":"function","name":"getSupportedTokens","outputs":[{"internalType":"address[]","name":"tokens","type":"address[]"}]},{"inputs":[{"internalType":"uint64","name":"destChainSelector","type":"uint64"}],"stateMutability":"view","type":"function","name":"isChainSupported","outputs":[{"internalType":"bool","name":"supported","type":"bool"}]}],"devdoc":{"kind":"dev","methods":{"ccipSend(uint64,(bytes,bytes,(address,uint256)[],address,bytes))":{"details":"Note if msg.value is larger than the required fee (from getFee) we accept the overpayment with no refund.Reverts with appropriate reason upon invalid message.","params":{"destinationChainSelector":"The destination chain ID","message":"The cross-chain CCIP message including data and/or tokens"},"returns":{"_0":"messageId The message ID"}},"getFee(uint64,(bytes,bytes,(address,uint256)[],address,bytes))":{"details":"Reverts with appropriate reason upon invalid message.","params":{"destinationChainSelector":"The destination chainSelector","message":"The cross-chain CCIP message including data and/or tokens"},"returns":{"fee":"returns execution fee for the message delivery to destination chain, denominated in the feeToken specified in the message."}},"getSupportedTokens(uint64)":{"params":{"destChainSelector":"No longer used."},"returns":{"tokens":"The addresses of the tokens that are supported."}},"isChainSupported(uint64)":{"params":{"destChainSelector":"The chain to check."},"returns":{"supported":"is true if it is supported, false if not."}}},"version":1},"userdoc":{"kind":"user","methods":{"ccipSend(uint64,(bytes,bytes,(address,uint256)[],address,bytes))":{"notice":"Request a message to be sent to the destination chain"},"getSupportedTokens(uint64)":{"notice":"Gets a list of all tokens that have been configured through permissioned methods for the local chain. Do note that this list may not be exhaustive as some tokens may be supported permissionlessly. The list does not take the destChainSelector into account."},"isChainSupported(uint64)":{"notice":"Checks if the given chain ID is supported for sending/receiving."}},"version":1}},"settings":{"remappings":["@chainlink/contracts-ccip/=lib/ccip/contracts/","@chainlink/local/=lib/chainlink-local/","@chainlink/local/src/=lib/chainlink-local/src/","@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/","@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/","ccip/=lib/ccip/contracts/","chainlink-local/=lib/chainlink-local/src/","ds-test/=lib/chainlink-local/lib/forge-std/lib/ds-test/src/","erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/","forge-std/=lib/forge-std/src/","openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/","openzeppelin-contracts/=lib/openzeppelin-contracts/"],"optimizer":{"enabled":true,"runs":200},"metadata":{"bytecodeHash":"ipfs"},"compilationTarget":{"lib/ccip/contracts/src/v0.8/ccip/interfaces/IRouterClient.sol":"IRouterClient"},"evmVersion":"paris","libraries":{},"viaIR":true},"sources":{"lib/ccip/contracts/src/v0.8/ccip/interfaces/IRouterClient.sol":{"keccak256":"0x379d680977a37d1e62c6e20c4259b8c69d8a7cd67f32abf99ffda640450b3f95","urls":["bzz-raw://68ef22693821814407348128b7ff255727131c720065be72e71a38f9715ee5fe","dweb:/ipfs/Qmdsd7GGhRGQaoh3nS1VYFMjkCfbRpSps5nGQMNK4XXdwr"],"license":"MIT"},"lib/ccip/contracts/src/v0.8/ccip/libraries/Client.sol":{"keccak256":"0xa1ce70adec733c80b230084b425a50caa852a99f17a7e43e38a96a975f11ce88","urls":["bzz-raw://08db3aa57ceae13832c1bf323aa29afa2620fd5b5205ff0d56152bf323c56256","dweb:/ipfs/QmUG2FSVP8xXVkdgFwNhc4YFDU7FNCaf1kKShiTaaHUddE"],"license":"MIT"}},"version":1},"id":2}